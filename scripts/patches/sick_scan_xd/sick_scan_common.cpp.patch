--- extern/ros/sick_scan_xd/driver/src/sick_scan_common.cpp.bak	2022-06-24 15:41:49.987865996 +0200
+++ extern/ros/sick_scan_xd/driver/src/sick_scan_common.cpp	2022-06-24 15:46:55.330226009 +0200
@@ -3726,12 +3726,12 @@
 
         ros_sensor_msgs::LaserScan msg;
         sick_scan_msg::Encoder EncoderMsg;
-        EncoderMsg.header.stamp = recvTimeStamp + rosDuration(config_.time_offset);
+        EncoderMsg.header.stamp = recvTimeStamp + rosDuration(std::chrono::duration<double, std::ratio<1>>(config_.time_offset));
         //TODO remove this hardcoded variable
         bool FireEncoder = false;
         EncoderMsg.header.frame_id = "Encoder";
         ROS_HEADER_SEQ(EncoderMsg.header, numPacketsProcessed);
-        msg.header.stamp = recvTimeStamp + rosDuration(config_.time_offset);
+        msg.header.stamp = recvTimeStamp + rosDuration(std::chrono::duration<double, std::ratio<1>>(config_.time_offset));
         double elevationAngleInRad = 0.0;
         short elevAngleX200 = 0;  // signed short (F5 B2  -> Layer 24
         // F5B2h -> -2638/200= -13.19Â°
@@ -4566,7 +4566,7 @@
               int numTmpLayer = numOfLayers;
 
 
-              cloud_.header.stamp = recvTimeStamp + rosDuration(config_.time_offset);
+              cloud_.header.stamp = recvTimeStamp + rosDuration(std::chrono::duration<double, std::ratio<1>>(config_.time_offset));
 
 
               cloud_.header.frame_id = config_.frame_id;
