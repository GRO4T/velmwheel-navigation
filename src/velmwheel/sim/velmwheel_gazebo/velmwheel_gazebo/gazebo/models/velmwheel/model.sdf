<!-- =================================================================================================================================
  - @file     model.sdf
  - @author   Krzysztof Pierczyk (krzysztof.pierczyk@gmail.com)
  - @date     Monday, 7th March 2022 3:27:05 pm
  - @modified Wednesday, 9th March 2022 11:13:26 pm
  - @project  engineering-thesis
  - @brief
  -    
  -    SDF description of the velmobil robot (mobile platform of the WUT Velma robot). Current version is stronly based on the 
  -    source provided by Jakub Sikora (@see @source).
  -    
  - @note LIDAR sensor is entirely defined as an external model which is include by the 'velmwheel'. This result in the name of
  -    the <plugin> tag being the same for the left and right sensor. This name is in turn used by the Gazebo C++ API 
  -    (gazebo_ros::Node::Get()) to choose the name of the topic that the custom plugin takes advantage of.
  -
  -    At the moment (gazebo11 utilizing libsdformat9) there is no option to parametrize the submodule to pick the upstream-defined
  -    name of the <plugin> tag (such a functionality is available as exprimental in libsdformat10 and will probably be present in
  -    the gazebo12). In result the current implementation switched to the URDF format that can utilize `xacro` constructs to
  -    parametrize submodels 
  - 
  - @copyright Krzysztof Pierczyk Â© 2022
  - @source https://github.com/RCPRG-ros-pkg/omnivelma
  - ================================================================================================================================== -->

<?xml version="1.0" ?>
<sdf version="1.7">
	<model name="velmwheel">

        <!-- ====================================================== Header ======================================================= -->

        <!-- Driver plugin for ROS integration -->
		<plugin name="velmwheel" filename="libvelmwheel_gazebo.so"/>
		<plugin name="imu_chain" filename="libimu_chain_gazebo.so"/>
        <!-- Model's pose -->
		<pose>0 0 0.1035 0 0 0</pose>
        <!-- Model type -->
		<static>false</static>
		
        <!-- ======================================================= Model ======================================================= -->
        
		<!-- Base block -->
		<link name="base">
			<pose>-0.081 0 0.019 0 0 0</pose>
			<visual name="base_visual">
				<geometry>
					<mesh>
						<uri>file://models/velmwheel/standard/visual/base.dae</uri>
					</mesh>
				</geometry>
				<material>
					<script>
						<uri>file://materials/scripts/velmwheel.material</uri>
						<name>velmwheel/base</name>
					</script>
				</material>
			</visual>
			<collision name="base_collision">
				<geometry>
					<mesh>
						<uri>file://models/velmwheel/standard/collider/base.dae</uri>
					</mesh>
				</geometry>
			</collision>
			<inertial>
				<mass>60</mass>
				<inertia>
					<ixx>2.94</ixx>
					<ixy>0</ixy>
					<ixz>0</ixz>
					<iyy>2.72</iyy>
					<iyz>0</iyz>
					<izz>5.40</izz>
				</inertia>
			</inertial>
		</link>
		
		<!-- Mobile front -->
		<link name="front">
			<pose>0.364 0 0.018 0 0 0</pose>
			<collision name="front_collision">
				<geometry>
					<mesh>
						<uri>file://models/velmwheel/standard/collider/front.dae</uri>
					</mesh>
				</geometry>
			</collision>
			<inertial>
				<mass>15</mass>
				<inertia>
					<ixx>0.7351</ixx>
					<ixy>0</ixy>
					<ixz>0</ixz>
					<iyy>0.0771</iyy>
					<iyz>0</iyz>
					<izz>0.7483</izz>
				</inertia>
			</inertial>
			<visual name="front_visual">
				<geometry>
					<mesh>
						<uri>file://models/velmwheel/standard/visual/front.dae</uri>
					</mesh>
				</geometry>
				<material>
					<script>
						<uri>file://materials/scripts/velmwheel.material</uri>
						<name>velmwheel/base</name>
					</script>
				</material>
			</visual>
		</link>

		<!-- Base-front joint -->
		<joint name="middle_joint" type="revolute">
			<parent>base</parent>
			<child>front</child>
			<pose>-0.1 0 -0.018 0 0 0</pose>
			<axis>
				<xyz>1 0 0</xyz>
			</axis>
		</joint>
		
		<!-- Right LIDAR sensor (@todo calculate more precise positions)-->
		<include>
			<uri>model://lidar</uri>
			<name>lidar_r</name>
			<pose>0 -0.3 0.176 0 0 -3.141592</pose>
		</include>
		<joint name="lidar_r_fix" type="fixed">
			<parent>base</parent>
			<child>lidar_r::base</child>
		</joint>

        <!-- Left LIDAR sensor (@todo calculate more precise positions)-->
		<include>
			<uri>model://lidar</uri>
			<name>lidar_l</name>
			<pose>0 0.3 0.176 0 0 0</pose>
		</include>
		<joint name="lidar_l_fix" type="fixed">
			<parent>base</parent>
			<child>lidar_l::base</child>
		</joint>
		
		<!-- IMU sensor -->
		<include>
			<uri>model://imu</uri>
			<name>imu</name>
			<pose>0 0 0 0 0 0</pose>
		</include>
		<joint name="imu_fix" type="fixed">
			<parent>base</parent>
			<child>imu::base</child>
		</joint>
		
		<!-- Rear right wheel -->
		<link name="wheel_rr">
			<pose>-0.36 -0.38 0 0 0 0</pose>
			<visual name="wheel_rr_middle">
				<geometry>
					<mesh>
						<uri>file://models/velmwheel/standard/visual/wheel.dae</uri>
					</mesh>
				</geometry>
				<material>
					<script>
						<uri>file://materials/scripts/velmwheel.material</uri>
						<name>velmwheel/wheels</name>
					</script>
				</material>
			</visual>
			<visual name="wheel_rr_rollers">
				<geometry>
					<mesh>
						<uri>file://models/velmwheel/standard/visual/wheel_l.dae</uri>
					</mesh>
				</geometry>
				<material>
					<script>
						<uri>file://materials/scripts/velmwheel.material</uri>
						<name>velmwheel/rollers</name>
					</script>
				</material>
			</visual>
			<collision name="wheel_rr_collision">
				<geometry>
					<sphere>
						<radius>0.1016</radius>
					</sphere>
				</geometry>
				<surface>
					<friction>
						<ode>
							<mu>0.95</mu>
							<mu2>0.5</mu2>
							<fdir1>0.707106781186548 -0.707106781186548 0</fdir1>
							<slip1>0.001</slip1>
							<slip2>0.1</slip2>
						</ode>
						<bullet>
							<friction>1</friction>
							<friction2>0</friction2>
							<fdir1>0.707106781186548 -0.707106781186548 0</fdir1>
							<rolling_friction>0</rolling_friction>
						</bullet>
					</friction>
				</surface>
			</collision>
			<inertial>
				<mass>1.6</mass>
				<inertia>
					<ixx>0.004738485</ixx>
					<ixy>0</ixy>
					<ixz>0</ixz>
					<iyy>0.008</iyy>
					<iyz>0</iyz>
					<izz>0.004738485</izz>
				</inertia>
			</inertial>
		</link>
		<!-- Rear-right wheel's joint -->
		<joint name="motor_rr" type="revolute">
			<parent>base</parent>
			<child>wheel_rr</child>
			<pose>0 0.036 0 0 0 0</pose>
			<axis>
				<xyz>0 1 0</xyz>
			</axis>
		</joint>
		
        <!-- Rear left wheel -->
		<link name="wheel_rl">
			<pose>-0.36 0.38 0 0 0 0</pose>
			<visual name="wheel_rl_middle">
				<geometry>
					<mesh>
						<uri>file://models/velmwheel/standard/visual/wheel.dae</uri>
					</mesh>
				</geometry>
				<material>
					<script>
						<uri>file://materials/scripts/velmwheel.material</uri>
						<name>velmwheel/wheels</name>
					</script>
				</material>
			</visual>
			<visual name="wheel_rl_rollers">
				<geometry>
					<mesh>
						<uri>file://models/velmwheel/standard/visual/wheel_r.dae</uri>
					</mesh>
				</geometry>
				<material>
					<script>
						<uri>file://materials/scripts/velmwheel.material</uri>
						<name>velmwheel/rollers</name>
					</script>
				</material>
			</visual>
			<collision name="wheel_rl_collision">
				<geometry>
					<sphere>
						<radius>0.1016</radius>
					</sphere>
				</geometry>
				<surface>
					<friction>
						<ode>
							<mu>0.95</mu>
							<mu2>0.5</mu2>
							<fdir1>0.707106781186548 0.707106781186548 0</fdir1>
							<slip1>0.001</slip1>
							<slip2>0.1</slip2>
						</ode>
						<bullet>
							<friction>1</friction>
							<friction2>0</friction2>
							<fdir1>0.707106781186548 0.707106781186548 0</fdir1>
							<rolling_friction>0</rolling_friction>
						</bullet>
					</friction>
				</surface>
			</collision>
			<inertial>
				<mass>1.6</mass>
				<inertia>
					<ixx>0.004738485</ixx>
					<ixy>0</ixy>
					<ixz>0</ixz>
					<iyy>0.008</iyy>
					<iyz>0</iyz>
					<izz>0.004738485</izz>
				</inertia>
			</inertial>
		</link>		
		<!-- Rear-left wheel's joint -->
		<joint name="motor_rl" type="revolute">
			<parent>base</parent>
			<child>wheel_rl</child>
			<pose>0 -0.036 0 0 0 0</pose>
			<axis>
				<xyz>0 1 0</xyz>
			</axis>
		</joint>
		
        <!-- Front right wheel -->
		<link name="wheel_fr">
			<pose>0.36 -0.38 0 0 0 0</pose>
			<visual name="wheel_fr_middle">
				<geometry>
					<mesh>
						<uri>file://models/velmwheel/standard/visual/wheel.dae</uri>
					</mesh>
				</geometry>
				<material>
					<script>
						<uri>file://materials/scripts/velmwheel.material</uri>
						<name>velmwheel/wheels</name>
					</script>
				</material>
			</visual>
			<visual name="wheel_fr_rollers">
				<geometry>
					<mesh>
						<uri>file://models/velmwheel/standard/visual/wheel_r.dae</uri>
					</mesh>
				</geometry>
				<material>
					<script>
						<uri>file://materials/scripts/velmwheel.material</uri>
						<name>velmwheel/rollers</name>
					</script>
				</material>
			</visual>
			<collision name="wheel_fr_collision">
				<geometry>
					<sphere>
						<radius>0.1016</radius>
					</sphere>
				</geometry>
				<surface>
					<friction>
						<ode>
							<mu>0.95</mu>
							<mu2>0.5</mu2>
							<fdir1>-0.707106781186548 -0.707106781186548 0</fdir1>
							<slip1>0.001</slip1>
							<slip2>0.1</slip2>
						</ode>
						<bullet>
							<friction>1</friction>
							<friction2>0</friction2>
							<fdir1>-0.707106781186548 -0.707106781186548 0</fdir1>
							<rolling_friction>0</rolling_friction>
						</bullet>
					</friction>
				</surface>
			</collision>
			<inertial>
				<mass>1.6</mass>
				<inertia>
					<ixx>0.004738485</ixx>
					<ixy>0</ixy>
					<ixz>0</ixz>
					<iyy>0.008</iyy>
					<iyz>0</iyz>
					<izz>0.004738485</izz>
				</inertia>
			</inertial>
		</link>
        <!-- Front-right wheel's joint -->
		<joint name="motor_fr" type="revolute">
			<parent>front</parent>
			<child>wheel_fr</child>
			<pose>0 0.036 0 0 0 0</pose>
			<axis>
				<xyz>0 1 0</xyz>
			</axis>
		</joint>
		
        <!-- Front left wheel -->
		<link name="wheel_fl">
			<pose>0.36 0.38 0 0 0 0</pose>
			<visual name="wheel_fl_middle">
				<geometry>
					<mesh>
						<uri>file://models/velmwheel/standard/visual/wheel.dae</uri>
					</mesh>
				</geometry>
				<material>
					<script>
						<uri>file://materials/scripts/velmwheel.material</uri>
						<name>velmwheel/wheels</name>
					</script>
				</material>
			</visual>
			<visual name="wheel_fl_rollers">
				<geometry>
					<mesh>
						<uri>file://models/velmwheel/standard/visual/wheel_l.dae</uri>
					</mesh>
				</geometry>
				<material>
					<script>
						<uri>file://materials/scripts/velmwheel.material</uri>
						<name>velmwheel/rollers</name>
					</script>
				</material>
			</visual>
			<collision name="wheel_fl_collision">
				<geometry>
					<sphere>
						<radius>0.1016</radius>
					</sphere>
				</geometry>
				<surface>
					<friction>
						<ode>
							<mu>0.95</mu>
							<mu2>0.5</mu2>
							<fdir1>-0.707106781186548 0.707106781186548 0</fdir1>
							<slip1>0.001</slip1>
							<slip2>0.1</slip2>
						</ode>
						<bullet>
							<friction>1</friction>
							<friction2>0</friction2>
							<fdir1>-0.707106781186548 0.707106781186548 0</fdir1>
							<rolling_friction>0</rolling_friction>
						</bullet>
					</friction>
				</surface>
			</collision>
			<inertial>
				<mass>1.6</mass>
				<inertia>
					<ixx>0.004738485</ixx>
					<ixy>0</ixy>
					<ixz>0</ixz>
					<iyy>0.008</iyy>
					<iyz>0</iyz>
					<izz>0.004738485</izz>
				</inertia>
			</inertial>
		</link>
        <!-- Front-left wheel's joint -->
		<joint name="motor_fl" type="revolute">
			<parent>front</parent>
			<child>wheel_fl</child>
			<pose>0 -0.036 0 0 0 0</pose>
			<axis>
				<xyz>0 1 0</xyz>
			</axis>
		</joint>

        <!-- ===================================================================================================================== -->
        
	</model>
</sdf>

