# ====================================================================================================================================
# @file       navsat_transform.yaml
# @author     Tom Moore (ayrton04@gmail.com)
# @author     Steve Macenski (stevenmacenski@gmail.com)
# @maintainer Krzysztof Pierczyk (krzysztof.pierczyk@gmail.com)
# @date       Tuesday, 29th March 2022 5:09:49 pm
# @modified   Wednesday, 13th April 2022 3:17:19 am
# @project    engineering-thesis
# @brief
#    
#    Default configuration for the `navsat_transform_node` node
#    
# @copyright Krzysztof Pierczyk Â© 2022
# ====================================================================================================================================

/**:

    ros__parameters:
    
        # requency of the main run loop
        frequency: 30.0

        # elay time, in seconds, before we calculate the transform from the UTM frame to your world frame. This is especially
        # mportant if you have use_odometry_yaw set to true. Defaults to 0.
        delay: 3.0

        # LEASE READ: Like all nodes in robot_localization, this node assumes that your IMU data is reported in the ENU frame.
        # any IMUs report data in the NED frame, so you'll want to verify that your data is in the correct frame before using
        # t. 

        # f your IMU does not account for magnetic declination, enter the value for your location here. If you don't know it,
        # ee http://www.ngdc.noaa.gov/geomag-web/ (make sure to convert the value to radians). This parameter is mandatory.
        magnetic_declination_radians: 0.0

        # our IMU's yaw, once the magentic_declination_radians value is added to it, should report 0 when facing east. If it
        # oesn't, enter the offset here. Defaults to 0.
        yaw_offset: 0.0

        # f this is true, the altitude is set to 0 in the output odometry message. Defaults to false.
        zero_altitude: false

        # f this is true, the transform world_frame->utm transform is broadcast for use by other nodes. Defaults to false.
        broadcast_utm_transform: false

        # f this is true, the utm->world_frame transform will be published instead of the world_frame->utm transform. 
        # ote that broadcast_utm_transform still has to be enabled. Defaults to false.
        broadcast_utm_transform_as_parent_frame: false

        # f this is true, all received odometry data is converted back to a lat/lon and published as a NavSatFix message as
        # /gps/filtered. Defaults to false.
        publish_filtered_gps: false

        # f this is true, the node ignores the IMU data and gets its heading from the odometry source (typically the
        # /odometry/filtered topic coming from one of robot_localization's state estimation nodes). BE CAREFUL when using this!
        # he yaw value in your odometry source *must* be world-referenced, e.g., you cannot use your odometry source for yaw
        # f your yaw data is based purely on integrated velocities. Defaults to false.
        use_odometry_yaw: false

        # f true, will retrieve the datum from the 'datum' parameter below, if available. If no 'datum' parameter exists,
        # avsat_transform_node will wait until the user calls the 'datum' service with the SetDatum service message.
        wait_for_datum: false

        # nstead of using the first GPS location and IMU-based heading for the local-frame origin, users can specify the
        # rigin (datum) using this parameter. The fields in the parameter represent latitude and longitude in decimal degrees,
        # nd heading in radians. As navsat_transform_node assumes an ENU standard, a 0 heading corresponds to east.
        datum: [55.944904, -3.186693, 0.0]
